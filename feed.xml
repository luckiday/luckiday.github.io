<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://luckiday.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://luckiday.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2023-09-27T08:20:52+00:00</updated><id>https://luckiday.github.io/feed.xml</id><title type="html">blank</title><subtitle>Yunqi Guo&apos;s personal website. </subtitle><entry><title type="html">Install Mediapipe in Blender</title><link href="https://luckiday.github.io/blog/2021/install-mediapipe-in-blender/" rel="alternate" type="text/html" title="Install Mediapipe in Blender"/><published>2021-08-19T08:06:47+00:00</published><updated>2021-08-19T08:06:47+00:00</updated><id>https://luckiday.github.io/blog/2021/install-mediapipe-in-blender</id><content type="html" xml:base="https://luckiday.github.io/blog/2021/install-mediapipe-in-blender/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Cross-compile Wireshark (3.x) for Android</title><link href="https://luckiday.github.io/blog/2020/post1/" rel="alternate" type="text/html" title="Cross-compile Wireshark (3.x) for Android"/><published>2020-06-10T21:01:00+00:00</published><updated>2020-06-10T21:01:00+00:00</updated><id>https://luckiday.github.io/blog/2020/post1</id><content type="html" xml:base="https://luckiday.github.io/blog/2020/post1/"><![CDATA[<h2 id="intro">Intro</h2> <p>Cross-compiling Wireshark for Android allows developers to analyze network traffic directly on Android devices. By having Wireshark available on Android, it becomes easier to troubleshoot network issues, debug mobile applications, and perform security testing on mobile networks. This capability enhances the ability to analyze and understand network behavior in a mobile context.</p> <h3 id="quickstart">Quickstart</h3> <p>To get started, download this repository and place the Vagrantfile in your development path, such as <code class="language-plaintext highlighter-rouge">/path/to/dev</code>. Then, execute the command <code class="language-plaintext highlighter-rouge">vagrant up</code> to install the virtual image.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd /path/to/dev
vagrant up
</code></pre></div></div> <p>This command will compile Wireshark and its related libraries.</p> <p>The virtual machine generates two folders: <code class="language-plaintext highlighter-rouge">ws_lib</code> and <code class="language-plaintext highlighter-rouge">ws_bin</code>. <code class="language-plaintext highlighter-rouge">ws_lib</code> contains <code class="language-plaintext highlighter-rouge">libwireshark.so</code> and other related libraries, while <code class="language-plaintext highlighter-rouge">ws_bin</code> contains the binary programs <code class="language-plaintext highlighter-rouge">android_ws_dissector</code> and <code class="language-plaintext highlighter-rouge">android_ws_dissector_pie</code>.</p> <p>To stop the virtual machine, you can use either of the following commands:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vagrant suspend (suspends the machine)
</code></pre></div></div> <p>Source code: https://github.com/luckiday/wireshark-for-android</p> <p>This repo contains a Vagrant environment that enables the automatic cross-compilation of Wireshark 3.4.0 for Android.</p>]]></content><author><name></name></author><category term="network"/><category term="mobile-network"/><category term="network"/><category term="wireshark"/><summary type="html"><![CDATA[a quick run down on accessing github metadata.]]></summary></entry></feed>